<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:sec="http://cxf.apache.org/configuration/security" xmlns:http="http://cxf.apache.org/transports/http/configuration"
	xmlns:httpj="http://cxf.apache.org/transports/http-jetty/configuration"
	xmlns:jaxws="http://java.sun.com/xml/ns/jaxws"
	xsi:schemaLocation="http://cxf.apache.org/configuration/security
              	http://cxf.apache.org/schemas/configuration/security.xsd
            	http://cxf.apache.org/transports/http/configuration
            	http://cxf.apache.org/schemas/configuration/http-conf.xsd
            	http://cxf.apache.org/transports/http-jetty/configuration
            	http://cxf.apache.org/schemas/configuration/http-jetty.xsd
            	http://www.springframework.org/schema/beans
            	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>file:${configuration:#{ systemProperties['user.dir'] +
				systemProperties['file.separator'] + 'etc' +
				systemProperties['file.separator'] + 'snoop.properties' }}</value>
		</property>
	</bean>

	<import resource="classpath:META-INF/cxf/cxf.xml" />
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml" />

	<bean id="keystorePath" class="java.lang.String">
		<constructor-arg index="0"
			value="${snoop.ssl.keystore:#{ systemProperties['user.dir'] + systemProperties['file.separator'] + 'etc' + systemProperties['file.separator'] + 'keystore.jks' }}" />
	</bean>

	<bean id="keystorePassword" class="java.lang.String">
		<constructor-arg index="0" value="${snoop.ssl.password}" />
	</bean>

	<httpj:engine-factory bus="cxf">
		<httpj:identifiedTLSServerParameters id="${snoop.http.host:localhost}" >
			<httpj:tlsServerParameters>
				<sec:keyManagers keyPassword="#{ @keystorePassword.toString() }" >
					<sec:keyStore type="JKS" password="#{ @keystorePassword.toString() }" file="#{ @keystorePath.toString() }" />
				</sec:keyManagers>
				<sec:trustManagers>
                	<sec:keyStore type="JKS" password="#{ @keystorePassword.toString() }" file="#{ @keystorePath.toString() }" />
            	</sec:trustManagers>
			</httpj:tlsServerParameters>
		</httpj:identifiedTLSServerParameters>

		<httpj:engine port="${snoop.http.port:80}">
			<httpj:tlsServerParametersRef id="secure" />
			<httpj:threadingParameters minThreads="${snoop.http.threadmin:10}"
				                       maxThreads="${snoop.http.threadmax:5000}" />
			<httpj:connector>
				<beans:bean class="org.eclipse.jetty.server.bio.SocketConnector">
					<beans:property name="port" value='${snoop.http.port:80}' />
					<beans:property name="reuseAddress" value="true" />
				</beans:bean>
			</httpj:connector>
			<httpj:handlers>
				<beans:bean class="org.eclipse.jetty.server.handler.ResourceHandler">
					<beans:property name="directoriesListed" value="false" />
					<beans:property name="welcomeFiles">
								<array value-type="java.lang.String">
							        <value>index.html</value>
							    </array>
					</beans:property>
					<beans:property name="resourceBase" value="web" />
				</beans:bean>
				<beans:bean class="org.eclipse.jetty.server.handler.DefaultHandler" />
			</httpj:handlers>
			<httpj:sessionSupport>true</httpj:sessionSupport>
		</httpj:engine>
	</httpj:engine-factory>

</beans>
